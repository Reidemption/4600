[{"/mnt/c/Users/Reid/Desktop/4600/choredom/src/atom/atoms.tsx":"1","/mnt/c/Users/Reid/Desktop/4600/choredom/src/chakra/theme.ts":"2","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/ChoreTile.tsx":"3","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/InputField.tsx":"4","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/InputItem.tsx":"5","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/Layout/ChoreModal.tsx":"6","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/Layout/Layout.tsx":"7","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/Layout/UserNav.tsx":"8","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/RequestTile.tsx":"9","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/SocialTile.tsx":"10","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/chore/AddPhoto.tsx":"11","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/chore/EditChore.tsx":"12","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/user/EditUserInfo.tsx":"13","/mnt/c/Users/Reid/Desktop/4600/choredom/src/firebase/clientApp.ts":"14","/mnt/c/Users/Reid/Desktop/4600/choredom/src/firebase/errors.ts":"15","/mnt/c/Users/Reid/Desktop/4600/choredom/src/interfaces/ChoreTileInterface.ts":"16","/mnt/c/Users/Reid/Desktop/4600/choredom/src/interfaces/SocialTileInterface.ts":"17","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/_app.tsx":"18","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/_document.tsx":"19","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/api/hello.ts":"20","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/chores.tsx":"21","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/connect.tsx":"22","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/home.tsx":"23","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/index.tsx":"24","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/login.tsx":"25","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/my-account.tsx":"26","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/register.tsx":"27","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/social.tsx":"28"},{"size":197,"mtime":1677633532641,"results":"29","hashOfConfig":"30"},{"size":310,"mtime":1675653526854,"results":"31","hashOfConfig":"30"},{"size":1768,"mtime":1679168089897,"results":"32","hashOfConfig":"30"},{"size":878,"mtime":1675650893730,"results":"33","hashOfConfig":"30"},{"size":1024,"mtime":1675650788782,"results":"34","hashOfConfig":"30"},{"size":5743,"mtime":1677645425604,"results":"35","hashOfConfig":"30"},{"size":4438,"mtime":1677449988073,"results":"36","hashOfConfig":"30"},{"size":188,"mtime":1676169676286,"results":"37","hashOfConfig":"30"},{"size":1614,"mtime":1679168089898,"results":"38","hashOfConfig":"30"},{"size":1174,"mtime":1676520819801,"results":"39","hashOfConfig":"30"},{"size":1372,"mtime":1679174362211,"results":"40","hashOfConfig":"30"},{"size":4891,"mtime":1677899176858,"results":"41","hashOfConfig":"30"},{"size":3401,"mtime":1677915342192,"results":"42","hashOfConfig":"30"},{"size":1077,"mtime":1676157470653,"results":"43","hashOfConfig":"30"},{"size":278,"mtime":1675650582422,"results":"44","hashOfConfig":"30"},{"size":231,"mtime":1677295519376,"results":"45","hashOfConfig":"30"},{"size":153,"mtime":1676520238007,"results":"46","hashOfConfig":"30"},{"size":464,"mtime":1677193732300,"results":"47","hashOfConfig":"30"},{"size":244,"mtime":1675133892726,"results":"48","hashOfConfig":"30"},{"size":320,"mtime":1675133892726,"results":"49","hashOfConfig":"30"},{"size":5054,"mtime":1679538188859,"results":"50","hashOfConfig":"30"},{"size":8664,"mtime":1679538387293,"results":"51","hashOfConfig":"30"},{"size":123,"mtime":1676169816222,"results":"52","hashOfConfig":"30"},{"size":4567,"mtime":1679168089900,"results":"53","hashOfConfig":"30"},{"size":2561,"mtime":1676170458584,"results":"54","hashOfConfig":"30"},{"size":8825,"mtime":1679168089901,"results":"55","hashOfConfig":"30"},{"size":5105,"mtime":1676521219652,"results":"56","hashOfConfig":"30"},{"size":1335,"mtime":1677046133045,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17oj0bh",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Reid/Desktop/4600/choredom/src/atom/atoms.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/chakra/theme.ts",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/ChoreTile.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/InputField.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/InputItem.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/Layout/ChoreModal.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/Layout/Layout.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/Layout/UserNav.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/RequestTile.tsx",["145"],[],"import { Flex, Stack, Spacer, Button, Text } from '@chakra-ui/react'\r\nimport { doc, getDoc, updateDoc } from 'firebase/firestore'\r\nimport { firestore } from '../firebase/clientApp'\r\nimport React, { useEffect } from 'react'\r\n\r\nconst RequestTile: React.FC<any> = ({\r\n\trequest,\r\n\tacceptRequest,\r\n\trejectRequest,\r\n\tloading,\r\n}) => {\r\n\tconst [senderInfo, setSenderInfo] = React.useState<any>(null)\r\n\tconst getSenderInfo = async () => {\r\n\t\tconst senderDoc = await getDoc(doc(firestore, 'users', request?.friend_id))\r\n\t\tif (senderDoc.data()) {\r\n\t\t\tsetSenderInfo(senderDoc?.data()?.displayName || senderDoc?.data()?.email)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function sender() {\r\n\t\t\tawait getSenderInfo()\r\n\t\t}\r\n\t\tsender()\r\n\t}, [])\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tborder={'1px'}\r\n\t\t\tborderColor={'gray'}\r\n\t\t\tborderRadius={'md'}\r\n\t\t\tp={4}\r\n\t\t\tmb={4}\r\n\t\t\tw={'full'}\r\n\t\t\talignItems={'center'}\r\n\t\t\tjustifyContent={'space-between'}\r\n\t\t>\r\n\t\t\t<Stack direction={'column'}>\r\n\t\t\t\t{senderInfo && <Text fontWeight={'bold'}>{senderInfo}</Text>}\r\n\t\t\t\t<Text>{request.status}</Text>\r\n\t\t\t</Stack>\r\n\t\t\t<Spacer />\r\n\t\t\t<Stack direction={'row'}>\r\n\t\t\t\t{request.status != 'accepted' && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolorScheme={'green'}\r\n\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tacceptRequest(request)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t{request.status != 'rejected' && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolorScheme={'red'}\r\n\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\trejectRequest(request)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tReject\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Stack>\r\n\t\t</Flex>\r\n\t)\r\n}\r\n\r\nexport default RequestTile\r\n","/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/SocialTile.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/chore/AddPhoto.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/chore/EditChore.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/components/user/EditUserInfo.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/firebase/clientApp.ts",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/firebase/errors.ts",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/interfaces/ChoreTileInterface.ts",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/interfaces/SocialTileInterface.ts",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/_app.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/_document.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/api/hello.ts",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/chores.tsx",["146"],[],"import {\r\n\tBox,\r\n\tCenter,\r\n\tFlex,\r\n\tGrid,\r\n\tStack,\r\n\tSpinner,\r\n\tText,\r\n\tButton,\r\n} from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ChoreTile from '../components/ChoreTile'\r\nimport ChoreProps from '../interfaces/ChoreTileInterface'\r\nimport {\r\n\tcollection,\r\n\tquery,\r\n\twhere,\r\n\tgetDocs,\r\n\tdoc,\r\n\tupdateDoc,\r\n\torderBy,\r\n\tdeleteDoc,\r\n} from 'firebase/firestore'\r\nimport { auth, firestore } from '../firebase/clientApp'\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\r\nimport { useRecoilState } from 'recoil'\r\nimport { userState } from '../atom/atoms'\r\nimport Link from 'next/link'\r\n\r\nconst Chore: React.FC = () => {\r\n\tconst [currentUser, setCurrentUser] = useRecoilState(userState)\r\n\tconst [user_chores, setUserChores] = useState<any[]>([])\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [oldChores, setOldChores] = useState<boolean>(false)\r\n\r\n\tconst editChore = async (chore: any, id: any) => {\r\n\t\tif (id) {\r\n\t\t\tconst choreRef = doc(firestore, 'chores', id)\r\n\t\t\tawait updateDoc(choreRef, {\r\n\t\t\t\t...chore,\r\n\t\t\t})\r\n\t\t\tgetChores()\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteChore = async (id: any) => {\r\n\t\tif (id) {\r\n\t\t\tconst choreRef = doc(firestore, 'chores', id)\r\n\t\t\tawait deleteDoc(choreRef)\r\n\t\t\tgetChores()\r\n\t\t}\r\n\t}\r\n\r\n\tconst finishChore = async (chore: any, id: any) => {\r\n\t\tif (chore.shared) {\r\n\t\t\t// TODO: If the chore \"shared\" then open a dialog to allow the user to submit a photo of the chore being done.\r\n\t\t}\r\n\t\tif (chore.repeated) {\r\n\t\t\t// TODO: If the chore is reoccurring, update the date to the next date instead of deleting it.\r\n\t\t}\r\n\t\tif (!chore.repeated) {\r\n\t\t\tconst choreRef = doc(firestore, 'chores', id)\r\n\t\t\tawait updateDoc(choreRef, {\r\n\t\t\t\tisDone: !chore?.status,\r\n\t\t\t})\r\n\t\t\tconsole.log('chore finished')\r\n\t\t}\r\n\t\tgetChores()\r\n\t}\r\n\r\n\tconst getChoresWithGlobalUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst choreQuery = query(\r\n\t\t\t\tcollection(firestore, 'chores'),\r\n\t\t\t\twhere('creatorId', '==', currentUser?.uid)\r\n\t\t\t)\r\n\t\t\tconst choreDocs = await getDocs(choreQuery)\r\n\t\t\tconsole.log('choreDocs', choreDocs)\r\n\t\t\tconst choreData = choreDocs.docs.map((doc) => ({\r\n\t\t\t\t...doc.data(),\r\n\t\t\t\tid: doc.id,\r\n\t\t\t}))\r\n\t\t\tconsole.log('choreData', choreData)\r\n\t\t\tsetUserChores(choreData)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('getChores error:', error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getChoresAndSetUser = async () => {\r\n\t\tconst auth = getAuth()\r\n\t\tonAuthStateChanged(auth, async (user) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { uid, displayName, email } = user!\r\n\t\t\t\tsetCurrentUser({ uid, displayName, email })\r\n\t\t\t\tconst choreQuery = query(\r\n\t\t\t\t\tcollection(firestore, 'chores'),\r\n\t\t\t\t\twhere('creatorId', '==', user?.uid)\r\n\t\t\t\t)\r\n\t\t\t\tconst choreDocs = await getDocs(choreQuery)\r\n\t\t\t\tconsole.log('choreDocs', choreDocs)\r\n\r\n\t\t\t\tconst choreData = choreDocs.docs.map((doc) => ({\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t}))\r\n\t\t\t\tsetUserChores(\r\n\t\t\t\t\tchoreData.sort((a : any, b : any) => {\r\n\t\t\t\t\t\treturn new Date(b.Date).valueOf() - new Date(a.Date).valueOf()\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('getChores error:', error)\r\n\t\t\t}\r\n\t\t\tsetLoading(false)\r\n\t\t})\r\n\t}\r\n\r\n\tconst getChores = async () => {\r\n\t\tsetLoading(true)\r\n\t\tconsole.log('currentUser', currentUser)\r\n\r\n\t\tif (!currentUser?.uid) {\r\n\t\t\tconsole.log('no user')\r\n\r\n\t\t\tawait getChoresAndSetUser()\r\n\t\t} else {\r\n\t\t\tconsole.log('user')\r\n\t\t\tawait getChoresWithGlobalUser()\r\n\t\t}\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tconst showOldChores = () => {\r\n\t\tsetOldChores(!oldChores)\r\n\t}\r\n\r\n\tconst filteredChores = user_chores.filter((chore) => {\r\n\t\treturn !chore.isDone || oldChores\r\n\t})\r\n\r\n\tconst allChoresAreDone = user_chores.filter((chore) => {\r\n\t\treturn chore.isDone\r\n\t}).length\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchChores() {\r\n\t\t\tawait getChores()\r\n\t\t}\r\n\t\tfetchChores()\r\n\t}, [])\r\n\r\n\tif (!currentUser?.uid) {\r\n\t\treturn (\r\n\t\t\t<Center h='100vh'>\r\n\t\t\t\t<Text fontSize={'xl'} color={'blue.400'}>\r\n\t\t\t\t\t<Link href='register'>Create an account&nbsp;</Link>\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text fontSize='xl'> to keep track of chores!</Text>bnv\r\n\t\t\t</Center>\r\n\t\t)\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<Center h='100vh'>\r\n\t\t\t\t<Spinner\r\n\t\t\t\t\tthickness='4px'\r\n\t\t\t\t\tspeed='0.65s'\r\n\t\t\t\t\temptyColor='gray.200'\r\n\t\t\t\t\tcolor='blue.500'\r\n\t\t\t\t\tsize='xl'\r\n\t\t\t\t/>\r\n\t\t\t</Center>\r\n\t\t)\r\n\t}\r\n\r\n\tif (allChoresAreDone === 0) {\r\n\t\treturn (\r\n\t\t\t<Center h='100vh'>\r\n\t\t\t\t<Stack>\r\n\t\t\t\t\t<Text fontSize='xl'>You are all caught up on your chores!</Text>\r\n\t\t\t\t\t<Button onClick={showOldChores} colorScheme='purple'>\r\n\t\t\t\t\t\tShow Completed Chores\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Stack>\r\n\t\t\t</Center>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Stack direction={'column'} spacing='6' align={'center'} mt='3'>\r\n\t\t\t\t{user_chores &&\r\n\t\t\t\t\tfilteredChores.map((chore) => (\r\n\t\t\t\t\t\t<ChoreTile\r\n\t\t\t\t\t\t\tkey={chore.id}\r\n\t\t\t\t\t\t\tprops={chore}\r\n\t\t\t\t\t\t\tchecked={chore.isDone}\r\n\t\t\t\t\t\t\tfinishChore={finishChore}\r\n\t\t\t\t\t\t\teditChore={editChore}\r\n\t\t\t\t\t\t\tdeleteChore={deleteChore}\r\n\t\t\t\t\t\t></ChoreTile>\r\n\t\t\t\t\t))}\r\n\t\t\t\t<Button onClick={showOldChores} colorScheme='purple'>\r\n\t\t\t\t\tToggle Completed Chores\r\n\t\t\t\t</Button>\r\n\t\t\t</Stack>\r\n\t\t</Box>\r\n\t)\r\n}\r\nexport default Chore\r\n","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/connect.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/home.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/index.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/login.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/my-account.tsx",["147"],[],"import React, { useEffect } from 'react'\r\nimport { Button, Center, Flex, Skeleton, Stack, Text } from '@chakra-ui/react'\r\nimport {\r\n\tgetAuth,\r\n\tonAuthStateChanged,\r\n\tsignOut,\r\n\tupdateEmail,\r\n\tupdateProfile,\r\n} from 'firebase/auth'\r\nimport { useRouter } from 'next/router'\r\nimport { Avatar, AvatarBadge, AvatarGroup } from '@chakra-ui/react'\r\nimport { useRecoilState, useRecoilValue } from 'recoil'\r\nimport { userState } from '../atom/atoms'\r\ntype MyAccountProps = {}\r\nimport EditUserInfo from '../components/user/EditUserInfo'\r\nimport RequestTile from '../components/RequestTile'\r\nimport { runTransaction, doc, getDoc } from 'firebase/firestore'\r\nimport { firestore } from '../firebase/clientApp'\r\n\r\nconst MyAccount: React.FC<MyAccountProps> = () => {\r\n\tconst [loaded, setLoaded] = React.useState(true)\r\n\tconst [gUser, setgUser] = useRecoilState(userState)\r\n\tconst [currentUser, setCurrentUser] = React.useState<any>(null)\r\n\tconst [edit, setEdit] = React.useState<boolean>(false)\r\n\tconst router = useRouter()\r\n\tconst auth = getAuth()\r\n\tconst [error, setError] = React.useState<string>('')\r\n\tconst [friendships, setFriendships] = React.useState<any[]>([])\r\n\tconst [tileLoading, setTileLoading] = React.useState<boolean>(false)\r\n\tconst [loading, setLoading] = React.useState<boolean>(false)\r\n\r\n\tconst getAccountInfo = async () => {\r\n\t\tonAuthStateChanged(auth, async (user) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!user) {\r\n\t\t\t\t\trouter.push('/')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tconst { uid, email, displayName } = user!\r\n\t\t\t\tconsole.log(user)\r\n\t\t\t\tsetgUser({ uid, email, displayName })\r\n\t\t\t\tsetCurrentUser(user)\r\n\t\t\t\tconsole.log('currentUser', currentUser)\r\n\r\n\t\t\t\tsetLoaded(false)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('myAccount error:', error)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tasync function func() {\r\n\t\t\tawait getAccountInfo()\r\n\t\t}\r\n\t\tfunc()\r\n\t}, [])\r\n\r\n\tconst logout = () => {\r\n\t\tconsole.log('logout')\r\n\t\tsignOut(auth)\r\n\t\trouter.push('/')\r\n\t}\r\n\r\n\tconst updateProfilePicture = () => {\r\n\t\tconsole.log('update profile picture')\r\n\t}\r\n\r\n\tconst getFriendships = async () => {\r\n\t\tconsole.log('getFriendships')\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tif (!gUser) {\r\n\t\t\t\tthrow new Error('User error. Try again later.')\r\n\t\t\t}\r\n\t\t\tsetCurrentUser(gUser)\r\n\t\t\tconst friendsRef = doc(firestore, 'friends', gUser.uid)\r\n\t\t\tconst docSnap = await getDoc(friendsRef)\r\n\t\t\tif (!docSnap.exists()) {\r\n\t\t\t\tthrow new Error('Possibility of no friends.')\r\n\t\t\t}\r\n\t\t\tlet requests = docSnap.data()?.friends\r\n\t\t\tconsole.log('requests', requests)\r\n\t\t\tconsole.log(\r\n\t\t\t\t'requests',\r\n\t\t\t\trequests.filter((r: any) => r.status !== 'pending')\r\n\t\t\t)\r\n\t\t\tsetFriendships(requests.filter((r: any) => r.status !== 'pending'))\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error detected in getFriendships', error)\r\n\t\t}\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tconst updateUser = (updated_user: any) => {\r\n\t\t// TODO: ensure there is a valid email??\r\n\t\tif (updated_user.email === '' || !updated_user.email.includes('@')) {\r\n\t\t\tsetError('Valid email is required')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (\r\n\t\t\tupdated_user.displayName === currentUser.displayName ||\r\n\t\t\tupdated_user.displayName === gUser?.displayName\r\n\t\t) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst auth = getAuth()\r\n\t\tif (auth.currentUser) {\r\n\t\t\tif (\r\n\t\t\t\tupdated_user.email != gUser?.email ||\r\n\t\t\t\tupdated_user.email != currentUser.email\r\n\t\t\t) {\r\n\t\t\t\tupdateEmail(auth.currentUser, updated_user.email)\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsetCurrentUser(auth.currentUser)\r\n\t\t\t\t\t\tconst { uid, email, displayName } = auth.currentUser!\r\n\t\t\t\t\t\tsetgUser({ uid, email, displayName })\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tupdateProfile(auth.currentUser, {\r\n\t\t\t\tdisplayName: updated_user.displayName,\r\n\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetCurrentUser(auth.currentUser)\r\n\t\t\t\t\tconst { uid, email, displayName } = auth.currentUser!\r\n\t\t\t\t\tsetgUser({ uid, email, displayName })\r\n\t\t\t\t\tconsole.log('updated!')\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst exist_requests = friendships.length > 0\r\n\r\n\tconst acceptRequest = async (req: any) => {\r\n\t\tsetTileLoading(true)\r\n\t\tawait handleRequest(req, 'accepted')\r\n\t\tawait getFriendships()\r\n\t\tsetTileLoading(false)\r\n\t}\r\n\r\n\tconst rejectRequest = async (req: any) => {\r\n\t\tsetTileLoading(true)\r\n\t\tawait handleRequest(req, 'rejected')\r\n\t\tawait getFriendships()\r\n\t\tsetTileLoading(false)\r\n\t}\r\n\r\n\tconst handleRequest = async (req: any, rStatus: string) => {\r\n\t\tconst user = currentUser\r\n\t\ttry {\r\n\t\t\tawait runTransaction(firestore, async (transaction) => {\r\n\t\t\t\tconst myDocData = {\r\n\t\t\t\t\tfriend_id: req.friend_id,\r\n\t\t\t\t\tstatus: rStatus,\r\n\t\t\t\t\tsender_id: req.sender_id,\r\n\t\t\t\t}\r\n\t\t\t\tconst friendDocData = {\r\n\t\t\t\t\tfriend_id: user.uid,\r\n\t\t\t\t\tstatus: rStatus,\r\n\t\t\t\t\tsender_id: req.sender_id,\r\n\t\t\t\t}\r\n\t\t\t\tconst myDocRef = doc(firestore, 'friends', user.uid)\r\n\t\t\t\tconst myDocSearch = await transaction.get(myDocRef)\r\n\r\n\t\t\t\tconst submitterDocRef = doc(firestore, 'friends', req.sender_id)\r\n\t\t\t\tconst submitterDoc = await transaction.get(submitterDocRef)\r\n\r\n\t\t\t\tif (!myDocSearch.exists() || !myDocSearch.data()?.friends) {\r\n\t\t\t\t\t// If the document doesn't exist, throw an error.\r\n\t\t\t\t\tconsole.log('Error finding document')\r\n\t\t\t\t\tthrow new Error(\"error finding friend's document\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// find index in array where friend_id = req.friend_id and sender_id = req.sender_id and status = pending\r\n\t\t\t\t// then update that index with the new status\r\n\t\t\t\t// if no index is found, throw an error\r\n\t\t\t\tconst index1 = myDocSearch\r\n\t\t\t\t\t.data()\r\n\t\t\t\t\t?.friends.findIndex(\r\n\t\t\t\t\t\t(friend: any) =>\r\n\t\t\t\t\t\t\tfriend.friend_id === req.friend_id &&\r\n\t\t\t\t\t\t\tfriend.sender_id === req.sender_id &&\r\n\t\t\t\t\t\t\tfriend.status === req.status\r\n\t\t\t\t\t)\r\n\t\t\t\tif (index1 === -1) {\r\n\t\t\t\t\tthrow new Error(\"error finding index of friend's document\")\r\n\t\t\t\t}\r\n\t\t\t\tlet arr1 = [...myDocSearch.data()?.friends]\r\n\t\t\t\tarr1[index1] = myDocData\r\n\t\t\t\ttransaction.update(myDocRef, {\r\n\t\t\t\t\tfriends: [...arr1],\r\n\t\t\t\t})\r\n\t\t\t\tif (!submitterDoc.exists() || !submitterDoc.data()?.friends) {\r\n\t\t\t\t\t// If the document doesn't exist, throw an error.\r\n\t\t\t\t\tthrow new Error('error finding friend request')\r\n\t\t\t\t}\r\n\t\t\t\t// find index in array where friend_id = req.friend_id and sender_id = req.sender_id and status = pending\r\n\t\t\t\t// then update that index with the new status\r\n\t\t\t\t// if no index is found, throw an error\r\n\t\t\t\tconst index2 = submitterDoc\r\n\t\t\t\t\t.data()\r\n\t\t\t\t\t?.friends.findIndex(\r\n\t\t\t\t\t\t(friend: any) =>\r\n\t\t\t\t\t\t\tuser.uid === friend.friend_id &&\r\n\t\t\t\t\t\t\tfriend.sender_id === req.sender_id &&\r\n\t\t\t\t\t\t\tfriend.status === req.status\r\n\t\t\t\t\t)\r\n\t\t\t\tif (index2 === -1) {\r\n\t\t\t\t\tthrow new Error('error finding friend request')\r\n\t\t\t\t}\r\n\t\t\t\tlet arr2 = [...submitterDoc.data()?.friends]\r\n\t\t\t\tarr2[index2] = friendDocData\r\n\t\t\t\ttransaction.update(submitterDocRef, {\r\n\t\t\t\t\tfriends: [...arr2],\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} catch (error: any) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Center h={'100vh'}>\r\n\t\t\t<Stack direction={'column'}>\r\n\t\t\t\t<Flex border={'2px'} borderColor='black' p='2'>\r\n\t\t\t\t\t<Stack direction='row' mb='4' mt='2'>\r\n\t\t\t\t\t\t<Stack direction='column' alignItems={'center'}>\r\n\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\tsize='md'\r\n\t\t\t\t\t\t\t\tname='User Avatar'\r\n\t\t\t\t\t\t\t\tsrc='/avatar_placeholder.jpg'\r\n\t\t\t\t\t\t\t\tonClick={() => updateProfilePicture()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\talign={'center'}\r\n\t\t\t\t\t\t\t\tas='i'\r\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\tcolor='blue.500'\r\n\t\t\t\t\t\t\t\tw='10vh'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tUpdate Profile Picture\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t<Stack direction='column' px='3'>\r\n\t\t\t\t\t\t\t{!currentUser?.displayName && (\r\n\t\t\t\t\t\t\t\t<Text fontSize='xl' fontWeight='bold'>\r\n\t\t\t\t\t\t\t\t\tNo Username Set\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{currentUser?.displayName && (\r\n\t\t\t\t\t\t\t\t<Text fontSize='xl' fontWeight='bold'>\r\n\t\t\t\t\t\t\t\t\t{currentUser?.displayName}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Text fontSize='xl' fontWeight='bold'>\r\n\t\t\t\t\t\t\t\t{gUser?.email}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t{currentUser?.phoneNumber && (\r\n\t\t\t\t\t\t\t\t<Text fontSize='xl' fontWeight='bold'>\r\n\t\t\t\t\t\t\t\t\t{currentUser?.phoneNumber}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Button colorScheme={'purple'} onClick={logout}>\r\n\t\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t{!loaded && (\r\n\t\t\t\t\t\t\t<EditUserInfo user={currentUser} handleEditUser={updateUser} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<Flex align='center' justify={'center'}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolorScheme={'purple'}\r\n\t\t\t\t\t\tw='50%'\r\n\t\t\t\t\t\toutlineColor={'black'}\r\n\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\tonClick={() => getFriendships()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tView All Relationships\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t{friendships.map((request, i) => (\r\n\t\t\t\t\t<RequestTile\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\trequest={request}\r\n\t\t\t\t\t\trejectRequest={rejectRequest}\r\n\t\t\t\t\t\tacceptRequest={acceptRequest}\r\n\t\t\t\t\t\tloading={tileLoading}\r\n\t\t\t\t\t\tuid={gUser?.uid}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Stack>\r\n\t\t</Center>\r\n\t)\r\n}\r\n\r\nexport default MyAccount\r\n","/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/register.tsx",[],[],"/mnt/c/Users/Reid/Desktop/4600/choredom/src/pages/social.tsx",[],[],{"ruleId":"148","severity":1,"message":"149","line":25,"column":5,"nodeType":"150","endLine":25,"endColumn":7,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":151,"column":5,"nodeType":"150","endLine":151,"endColumn":7,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":56,"column":5,"nodeType":"150","endLine":56,"endColumn":7,"suggestions":"155"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSenderInfo'. Either include it or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'getChores'. Either include it or remove the dependency array.",["157"],"React Hook useEffect has a missing dependency: 'getAccountInfo'. Either include it or remove the dependency array.",["158"],{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [getSenderInfo]",{"range":"165","text":"166"},"Update the dependencies array to be: [getChores]",{"range":"167","text":"168"},"Update the dependencies array to be: [getAccountInfo]",{"range":"169","text":"170"},[723,725],"[getSenderInfo]",[3750,3752],"[getChores]",[1833,1835],"[getAccountInfo]"]